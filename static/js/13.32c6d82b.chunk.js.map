{"version":3,"file":"static/js/13.32c6d82b.chunk.js","mappings":"8SAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAU,sBAAuB,CACtDE,OAAQ,CACNC,QAASJ,KAHkB,cACzBK,EADyB,yBAMxBA,EAASC,MANe,2CAAH,qDASjBC,EAAa,mCAAG,WAAMC,GAAN,8EAC3BC,QAAQC,IAAI,gBAAiBF,GADF,SAEJP,EAAAA,EAAAA,IAAA,iBAAoBO,GAAM,CAC/CL,OAAQ,CACNC,QAASJ,KAJc,cAErBK,EAFqB,OAO3BI,QAAQC,IAAIL,GAPe,kBAQpBA,EAASC,MARW,2CAAH,sDAWbK,EAAY,mCAAG,WAAMH,GAAN,8EAC1BC,QAAQC,IAAIF,GADc,SAEHP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,YAAkC,CACvDL,OAAQ,CACNC,QAASJ,KAJa,cAEpBK,EAFoB,OAO1BI,QAAQC,IAAIL,GAPc,kBAQnBA,EAASC,KAAKM,MARK,2CAAH,sDAWZC,EAAe,mCAAG,WAAML,GAAN,8EAC7BC,QAAQC,IAAIF,GADiB,SAENP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,YAAkC,CACvDL,OAAQ,CACNC,QAASJ,KAJgB,cAEvBK,EAFuB,OAO7BI,QAAQC,IAAIL,GAPiB,kBAQtBA,EAASC,KAAKQ,SARQ,2CAAH,sDAWfC,EAAc,mCAAG,WAAMC,GAAN,8EAC5BP,QAAQC,IAAIM,GADgB,SAELf,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAASJ,EACTiB,MAAOD,KALiB,cAEtBX,EAFsB,OAQ5BI,QAAQC,IAAIL,GARgB,kBASrBA,EAASC,MATY,2CAAH,qD,6ECT3B,UAlCqB,WACnB,OAAsCY,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAgBQ,GACbG,MAAK,SAAAlB,GACJc,EAAed,EAChB,IACAmB,MAAMhB,QAAQC,IAClB,GAAE,CAACW,IAECF,EAIL,OACE,8BACGA,EAAYO,OAAS,GACpB,wBACGP,EAAYQ,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,sCACU,uBAAID,KACZ,uBAAIC,MAFGrB,EADM,OAQnB,gDAIP,C","sources":["components/fetchAPI.js","page/reviewsMovie/ReviewsMovie.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '7e0fc0f40a1f522dce260b9a97593bef';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nexport const getTrendingMovies = async () => {\r\n  const response = await axios.get('/trending/movie/day', {\r\n    params: {\r\n      api_key: API_KEY,\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const getMoviesById = async id => {\r\n  console.log('getMoviesById', id);\r\n  const response = await axios.get(`/movie/${id}`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n    },\r\n  });\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\nexport const getMovieCast = async id => {\r\n  console.log(id);\r\n  const response = await axios.get(`/movie/${id}/credits`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n    },\r\n  });\r\n  console.log(response);\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getMovieReviews = async id => {\r\n  console.log(id);\r\n  const response = await axios.get(`/movie/${id}/reviews`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n    },\r\n  });\r\n  console.log(response);\r\n  return response.data.results;\r\n};\r\n\r\nexport const getSearchQuery = async searchQuery => {\r\n  console.log(searchQuery);\r\n  const response = await axios.get(`/search/movie`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n      query: searchQuery,\r\n    },\r\n  });\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n","import { getMovieReviews } from 'components/fetchAPI';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ReviewsMovie = () => {\r\n  const [reviewMovie, setReviewMovie] = useState(null);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    getMovieReviews(movieId)\r\n      .then(data => {\r\n        setReviewMovie(data);\r\n      })\r\n      .catch(console.log);\r\n  }, [movieId]);\r\n\r\n  if (!reviewMovie) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {reviewMovie.length > 0 ? (\r\n        <ul>\r\n          {reviewMovie.map(({ id, author, content }) => (\r\n            <li key={id}>\r\n              Author: <b>{author}</b>\r\n              <p>{content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <div>Reviews not found</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReviewsMovie;\r\n"],"names":["API_KEY","axios","getTrendingMovies","params","api_key","response","data","getMoviesById","id","console","log","getMovieCast","cast","getMovieReviews","results","getSearchQuery","searchQuery","query","useState","reviewMovie","setReviewMovie","movieId","useParams","useEffect","then","catch","length","map","author","content"],"sourceRoot":""}